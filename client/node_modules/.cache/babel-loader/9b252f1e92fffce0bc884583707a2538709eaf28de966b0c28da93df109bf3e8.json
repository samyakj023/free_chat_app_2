{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\cur_chat_app\\\\free-chat-app\\\\client\\\\src\\\\pages\\\\home\\\\components\\\\UsersList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CreateNewChat } from \"../../../apicalls/chats\";\nimport { HideLoader, ShowLoader } from \"../../../redux/loaderSlice\";\nimport { SetAllChats, SetSelectedChat } from \"../../../redux/userSlice\";\nimport moment from \"moment\";\nimport store from \"../../../redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersList(_ref) {\n  _s();\n  let {\n    searchKey,\n    socket,\n    onlineUsers\n  } = _ref;\n  const {\n    allUsers,\n    allChats,\n    user,\n    selectedChat\n  } = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const createNewChat = async receipentUserId => {\n    try {\n      dispatch(ShowLoader());\n      const response = await CreateNewChat([user._id, receipentUserId]);\n      dispatch(HideLoader());\n      if (response.success) {\n        toast.success(response.message);\n        const newChat = response.data;\n        const updatedChats = [...allChats, newChat];\n        dispatch(SetAllChats(updatedChats));\n        dispatch(SetSelectedChat(newChat));\n      } else {\n        toast.error(response.message);\n      }\n    } catch (error) {\n      dispatch(HideLoader());\n      toast.error(error.message);\n    }\n  };\n  const openChat = receipentUserId => {\n    const chat = allChats.find(chat => chat.members.map(mem => mem._id).includes(user._id) && chat.members.map(mem => mem._id).includes(receipentUserId));\n    if (chat) {\n      dispatch(SetSelectedChat(chat));\n    }\n  };\n  const getData = () => {\n    // if search key is empty then return all chats else return filtered chats and users\n    try {\n      if (searchKey === \"\") {\n        return allChats || [];\n      }\n      return allUsers.filter(user => user.name.toLowerCase().includes(searchKey.toLowerCase()) || []);\n    } catch (error) {\n      return [];\n    }\n  };\n  const getIsSelctedChatOrNot = userObj => {\n    if (selectedChat) {\n      return selectedChat.members.map(mem => mem._id).includes(userObj._id);\n    }\n    return false;\n  };\n  const getDateInRegualarFormat = date => {\n    let result = \"\";\n\n    // if date is today return time in hh:mm format\n    if (moment(date).isSame(moment(), \"day\")) {\n      result = moment(date).format(\"hh:mm\");\n    }\n    // if date is yesterday return yesterday and time in hh:mm format\n    else if (moment(date).isSame(moment().subtract(1, \"day\"), \"day\")) {\n      result = `Yesterday ${moment(date).format(\"hh:mm\")}`;\n    }\n    // if date is this year return date and time in MMM DD hh:mm format\n    else if (moment(date).isSame(moment(), \"year\")) {\n      result = moment(date).format(\"MMM DD hh:mm\");\n    }\n    return result;\n  };\n  const getLastMsg = userObj => {\n    const chat = allChats.find(chat => chat.members.map(mem => mem._id).includes(userObj._id));\n    if (!chat || !chat.lastMessage) {\n      return \"\";\n    } else {\n      var _chat$lastMessage, _chat$lastMessage2, _chat$lastMessage3;\n      const lastMsgPerson = (chat === null || chat === void 0 ? void 0 : (_chat$lastMessage = chat.lastMessage) === null || _chat$lastMessage === void 0 ? void 0 : _chat$lastMessage.sender) === user._id ? \"You : \" : \"\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between w-72\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-gray-600 text-sm\",\n          children: [lastMsgPerson, \" \", chat === null || chat === void 0 ? void 0 : (_chat$lastMessage2 = chat.lastMessage) === null || _chat$lastMessage2 === void 0 ? void 0 : _chat$lastMessage2.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-gray-500 text-sm\",\n          children: getDateInRegualarFormat(chat === null || chat === void 0 ? void 0 : (_chat$lastMessage3 = chat.lastMessage) === null || _chat$lastMessage3 === void 0 ? void 0 : _chat$lastMessage3.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const getUnreadMessages = userObj => {\n    var _chat$lastMessage4;\n    const chat = allChats.find(chat => chat.members.map(mem => mem._id).includes(userObj._id));\n    if (chat && chat !== null && chat !== void 0 && chat.unreadMessages && (chat === null || chat === void 0 ? void 0 : (_chat$lastMessage4 = chat.lastMessage) === null || _chat$lastMessage4 === void 0 ? void 0 : _chat$lastMessage4.sender) !== user._id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\",\n        children: chat === null || chat === void 0 ? void 0 : chat.unreadMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"receive-message\", message => {\n      // if the chat area opened is not equal to chat in message , then increase unread messages by 1 and update last message\n      const tempSelectedChat = store.getState().userReducer.selectedChat;\n      let tempAllChats = store.getState().userReducer.allChats;\n      if ((tempSelectedChat === null || tempSelectedChat === void 0 ? void 0 : tempSelectedChat._id) !== message.chat) {\n        const updatedAllChats = tempAllChats.map(chat => {\n          if (chat._id === message.chat) {\n            return {\n              ...chat,\n              unreadMessages: ((chat === null || chat === void 0 ? void 0 : chat.unreadMessages) || 0) + 1,\n              lastMessage: message,\n              updatedAt: message.createdAt\n            };\n          }\n          return chat;\n        });\n        tempAllChats = updatedAllChats;\n      }\n\n      // always latest message chat will be on top\n      const latestChat = tempAllChats.find(chat => chat._id === message.chat);\n      const otherChats = tempAllChats.filter(chat => chat._id !== message.chat);\n      tempAllChats = [latestChat, ...otherChats];\n      dispatch(SetAllChats(tempAllChats));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-3 mt-5 lg:w-96 xl:w-96 md:w-60 sm:w-60\",\n    children: getData().map(chatObjOrUserObj => {\n      let userObj = chatObjOrUserObj;\n      if (chatObjOrUserObj.members) {\n        userObj = chatObjOrUserObj.members.find(mem => mem._id !== user._id);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `shadow-sm border p-2 rounded-xl bg-white flex justify-between items-center cursor-pointer w-full\n                ${getIsSelctedChatOrNot(userObj) && \"border-primary border-2\"}\n            `,\n        onClick: () => openChat(userObj._id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-5 items-center\",\n          children: [userObj.profilePic && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userObj.profilePic,\n            alt: \"profile pic\",\n            className: \"w-10 h-10 rounded-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), !userObj.profilePic && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-400 rounded-full h-12 w-12 flex items-center justify-center relative\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"uppercase text-xl font-semibold text-white\",\n              children: userObj.name[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-1 items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: userObj.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), onlineUsers.includes(userObj._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-green-700 h-3 w-3 rounded-full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), getUnreadMessages(userObj)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), getLastMsg(userObj)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => createNewChat(userObj._id),\n          children: !allChats.find(chat => chat.members.map(mem => mem._id).includes(userObj._id)) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"border-primary border text-primary bg-white p-1 rounded\",\n            children: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, userObj._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(UsersList, \"KIcCqrtErZnJFH7c4tYvrYPAcwc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useEffect","toast","useDispatch","useSelector","CreateNewChat","HideLoader","ShowLoader","SetAllChats","SetSelectedChat","moment","store","UsersList","searchKey","socket","onlineUsers","allUsers","allChats","user","selectedChat","state","userReducer","dispatch","createNewChat","receipentUserId","response","_id","success","message","newChat","data","updatedChats","error","openChat","chat","find","members","map","mem","includes","getData","filter","name","toLowerCase","getIsSelctedChatOrNot","userObj","getDateInRegualarFormat","date","result","isSame","format","subtract","getLastMsg","lastMessage","lastMsgPerson","sender","text","createdAt","getUnreadMessages","unreadMessages","on","tempSelectedChat","getState","tempAllChats","updatedAllChats","updatedAt","latestChat","otherChats","chatObjOrUserObj","profilePic"],"sources":["C:/Desktop/cur_chat_app/free-chat-app/client/src/pages/home/components/UsersList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CreateNewChat } from \"../../../apicalls/chats\";\r\nimport { HideLoader, ShowLoader } from \"../../../redux/loaderSlice\";\r\nimport { SetAllChats, SetSelectedChat } from \"../../../redux/userSlice\";\r\nimport moment from \"moment\";\r\nimport store from \"../../../redux/store\";\r\n\r\nfunction UsersList({ searchKey, socket, onlineUsers }) {\r\n  const { allUsers, allChats, user, selectedChat } = useSelector(\r\n    (state) => state.userReducer\r\n  );\r\n  const dispatch = useDispatch();\r\n  const createNewChat = async (receipentUserId) => {\r\n    try {\r\n      dispatch(ShowLoader());\r\n      const response = await CreateNewChat([user._id, receipentUserId]);\r\n      dispatch(HideLoader());\r\n      if (response.success) {\r\n        toast.success(response.message);\r\n        const newChat = response.data;\r\n        const updatedChats = [...allChats, newChat];\r\n        dispatch(SetAllChats(updatedChats));\r\n        dispatch(SetSelectedChat(newChat));\r\n      } else {\r\n        toast.error(response.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoader());\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const openChat = (receipentUserId) => {\r\n    const chat = allChats.find(\r\n      (chat) =>\r\n        chat.members.map((mem) => mem._id).includes(user._id) &&\r\n        chat.members.map((mem) => mem._id).includes(receipentUserId)\r\n    );\r\n    if (chat) {\r\n      dispatch(SetSelectedChat(chat));\r\n    }\r\n  };\r\n\r\n  const getData = () => {\r\n    // if search key is empty then return all chats else return filtered chats and users\r\n    try {\r\n      if (searchKey === \"\") {\r\n        return allChats || [];\r\n      }\r\n      return allUsers.filter(\r\n        (user) =>\r\n          user.name.toLowerCase().includes(searchKey.toLowerCase()) || []\r\n      );\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getIsSelctedChatOrNot = (userObj) => {\r\n    if (selectedChat) {\r\n      return selectedChat.members.map((mem) => mem._id).includes(userObj._id);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getDateInRegualarFormat = (date) => {\r\n    let result = \"\";\r\n\r\n    // if date is today return time in hh:mm format\r\n    if (moment(date).isSame(moment(), \"day\")) {\r\n      result = moment(date).format(\"hh:mm\");\r\n    }\r\n    // if date is yesterday return yesterday and time in hh:mm format\r\n    else if (moment(date).isSame(moment().subtract(1, \"day\"), \"day\")) {\r\n      result = `Yesterday ${moment(date).format(\"hh:mm\")}`;\r\n    }\r\n    // if date is this year return date and time in MMM DD hh:mm format\r\n    else if (moment(date).isSame(moment(), \"year\")) {\r\n      result = moment(date).format(\"MMM DD hh:mm\");\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const getLastMsg = (userObj) => {\r\n    const chat = allChats.find((chat) =>\r\n      chat.members.map((mem) => mem._id).includes(userObj._id)\r\n    );\r\n    if (!chat || !chat.lastMessage) {\r\n      return \"\";\r\n    } else {\r\n      const lastMsgPerson =\r\n        chat?.lastMessage?.sender === user._id ? \"You : \" : \"\";\r\n      return (\r\n        <div className=\"flex justify-between w-72\">\r\n          <h1 className=\"text-gray-600 text-sm\">\r\n            {lastMsgPerson} {chat?.lastMessage?.text}\r\n          </h1>\r\n          <h1 className=\"text-gray-500 text-sm\">\r\n            {getDateInRegualarFormat(chat?.lastMessage?.createdAt)}\r\n          </h1>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getUnreadMessages = (userObj) => {\r\n    const chat = allChats.find((chat) =>\r\n      chat.members.map((mem) => mem._id).includes(userObj._id)\r\n    );\r\n    if (\r\n      chat &&\r\n      chat?.unreadMessages &&\r\n      chat?.lastMessage?.sender !== user._id\r\n    ) {\r\n      return (\r\n        <div className=\"bg-blue-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n          {chat?.unreadMessages}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive-message\", (message) => {\r\n      // if the chat area opened is not equal to chat in message , then increase unread messages by 1 and update last message\r\n      const tempSelectedChat = store.getState().userReducer.selectedChat;\r\n      let tempAllChats = store.getState().userReducer.allChats;\r\n      if (tempSelectedChat?._id !== message.chat) {\r\n        const updatedAllChats = tempAllChats.map((chat) => {\r\n          if (chat._id === message.chat) {\r\n            return {\r\n              ...chat,\r\n              unreadMessages: (chat?.unreadMessages || 0) + 1,\r\n              lastMessage: message,\r\n              updatedAt: message.createdAt,\r\n            };\r\n          }\r\n          return chat;\r\n        });\r\n        tempAllChats = updatedAllChats;\r\n      }\r\n\r\n      // always latest message chat will be on top\r\n      const latestChat = tempAllChats.find((chat) => chat._id === message.chat);\r\n      const otherChats = tempAllChats.filter(\r\n        (chat) => chat._id !== message.chat\r\n      );\r\n      tempAllChats = [latestChat, ...otherChats];\r\n      dispatch(SetAllChats(tempAllChats));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-3 mt-5 lg:w-96 xl:w-96 md:w-60 sm:w-60\">\r\n      {getData().map((chatObjOrUserObj) => {\r\n        let userObj = chatObjOrUserObj;\r\n\r\n        if (chatObjOrUserObj.members) {\r\n          userObj = chatObjOrUserObj.members.find(\r\n            (mem) => mem._id !== user._id\r\n          );\r\n        }\r\n        return (\r\n          <div\r\n            className={`shadow-sm border p-2 rounded-xl bg-white flex justify-between items-center cursor-pointer w-full\r\n                ${getIsSelctedChatOrNot(userObj) && \"border-primary border-2\"}\r\n            `}\r\n            key={userObj._id}\r\n            onClick={() => openChat(userObj._id)}\r\n          >\r\n            <div className=\"flex gap-5 items-center\">\r\n              {userObj.profilePic && (\r\n                <img\r\n                  src={userObj.profilePic}\r\n                  alt=\"profile pic\"\r\n                  className=\"w-10 h-10 rounded-full\"\r\n                />\r\n              )}\r\n              {!userObj.profilePic && (\r\n                <div className=\"bg-gray-400 rounded-full h-12 w-12 flex items-center justify-center relative\">\r\n                  <h1 className=\"uppercase text-xl font-semibold text-white\">\r\n                    {userObj.name[0]}\r\n                  </h1>\r\n                </div>\r\n              )}\r\n              <div className=\"flex flex-col gap-1\">\r\n                <div className=\"flex gap-1\">\r\n                  <div className=\"flex gap-1 items-center\">\r\n                    <h1>{userObj.name}</h1>\r\n                    {onlineUsers.includes(userObj._id) && (\r\n                      <div>\r\n                        <div className=\"bg-green-700 h-3 w-3 rounded-full\"></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {getUnreadMessages(userObj)}\r\n                </div>\r\n                {getLastMsg(userObj)}\r\n              </div>\r\n            </div>\r\n            <div onClick={() => createNewChat(userObj._id)}>\r\n              {!allChats.find((chat) =>\r\n                chat.members.map((mem) => mem._id).includes(userObj._id)\r\n              ) && (\r\n                <button className=\"border-primary border text-primary bg-white p-1 rounded\">\r\n                  Create Chat\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}