{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\cur_chat_app\\\\free-chat-app\\\\client\\\\src\\\\pages\\\\home\\\\components\\\\ChatArea.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetMessages, SendMessage } from \"../../../apicalls/messages\";\nimport { ClearChatMessages } from \"../../../apicalls/chats\";\nimport { HideLoader, ShowLoader } from \"../../../redux/loaderSlice\";\nimport toast from \"react-hot-toast\";\nimport moment from \"moment\";\nimport { SetAllChats } from \"../../../redux/userSlice\";\nimport store from \"../../../redux/store\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatArea(_ref) {\n  _s();\n  let {\n    socket\n  } = _ref;\n  const [showEmojiPicker, setShowEmojiPicker] = React.useState(false);\n  const [isReceipentTyping, setIsReceipentTyping] = React.useState(false);\n  const dispatch = useDispatch();\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  const {\n    selectedChat,\n    user,\n    allChats\n  } = useSelector(state => state.userReducer);\n  const [messages = [], setMessages] = React.useState([]);\n  const receipentUser = selectedChat.members.find(mem => mem._id !== user._id);\n  const sendNewMessage = async image => {\n    try {\n      const message = {\n        chat: selectedChat._id,\n        sender: user._id,\n        text: newMessage,\n        image\n      };\n      // send message to server using socket\n      socket.emit(\"send-message\", {\n        ...message,\n        members: selectedChat.members.map(mem => mem._id),\n        createdAt: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\n        read: false\n      });\n\n      // send message to server to save in db\n      const response = await SendMessage(message);\n      if (response.success) {\n        setNewMessage(\"\");\n        setShowEmojiPicker(false);\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n  const getMessages = async () => {\n    try {\n      dispatch(ShowLoader());\n      const response = await GetMessages(selectedChat._id);\n      dispatch(HideLoader());\n      if (response.success) {\n        setMessages(response.data);\n      }\n    } catch (error) {\n      dispatch(HideLoader());\n      toast.error(error.message);\n    }\n  };\n  const clearUnreadMessages = async () => {\n    try {\n      socket.emit(\"clear-unread-messages\", {\n        chat: selectedChat._id,\n        members: selectedChat.members.map(mem => mem._id)\n      });\n      const response = await ClearChatMessages(selectedChat._id);\n      if (response.success) {\n        const updatedChats = allChats.map(chat => {\n          if (chat._id === selectedChat._id) {\n            return response.data;\n          }\n          return chat;\n        });\n        dispatch(SetAllChats(updatedChats));\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const getDateInRegualarFormat = date => {\n    let result = \"\";\n\n    // if date is today return time in hh:mm format\n    if (moment(date).isSame(moment(), \"day\")) {\n      result = moment(date).format(\"hh:mm\");\n    }\n    // if date is yesterday return yesterday and time in hh:mm format\n    else if (moment(date).isSame(moment().subtract(1, \"day\"), \"day\")) {\n      result = `Yesterday ${moment(date).format(\"hh:mm\")}`;\n    }\n    // if date is this year return date and time in MMM DD hh:mm format\n    else if (moment(date).isSame(moment(), \"year\")) {\n      result = moment(date).format(\"MMM DD hh:mm\");\n    }\n    return result;\n  };\n  useEffect(() => {\n    var _selectedChat$lastMes;\n    getMessages();\n    if ((selectedChat === null || selectedChat === void 0 ? void 0 : (_selectedChat$lastMes = selectedChat.lastMessage) === null || _selectedChat$lastMes === void 0 ? void 0 : _selectedChat$lastMes.sender) !== user._id) {\n      clearUnreadMessages();\n    }\n\n    // receive message from server using socket\n    socket.on(\"receive-message\", message => {\n      const tempSelectedChat = store.getState().userReducer.selectedChat;\n      if (tempSelectedChat._id === message.chat) {\n        setMessages(messages => [...messages, message]);\n      }\n      if (tempSelectedChat._id === message.chat && message.sender !== user._id) {\n        clearUnreadMessages();\n      }\n    });\n\n    // clear unread messages from server using socket\n    socket.on(\"unread-messages-cleared\", data => {\n      const tempAllChats = store.getState().userReducer.allChats;\n      const tempSelectedChat = store.getState().userReducer.selectedChat;\n      if (data.chat === tempSelectedChat._id) {\n        // update unreadmessages count in selected chat\n        const updatedChats = tempAllChats.map(chat => {\n          if (chat._id === data.chat) {\n            return {\n              ...chat,\n              unreadMessages: 0\n            };\n          }\n          return chat;\n        });\n        dispatch(SetAllChats(updatedChats));\n\n        // set all messages as read\n        setMessages(prevMessages => {\n          return prevMessages.map(message => {\n            return {\n              ...message,\n              read: true\n            };\n          });\n        });\n      }\n    });\n\n    // receipent typing\n    socket.on(\"started-typing\", data => {\n      const selctedChat = store.getState().userReducer.selectedChat;\n      if (data.chat === selctedChat._id && data.sender !== user._id) {\n        setIsReceipentTyping(true);\n      }\n      setTimeout(() => {\n        setIsReceipentTyping(false);\n      }, 1500);\n    });\n  }, [selectedChat]);\n  useEffect(() => {\n    // always scroll to bottom for messages id\n    const messagesContainer = document.getElementById(\"messages\");\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }, [messages, isReceipentTyping]);\n  const onUploadImageClick = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader(file);\n    reader.readAsDataURL(file);\n    reader.onloadend = async () => {\n      sendNewMessage(reader.result);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white h-[82vh] border rounded-2xl w-full flex flex-col justify-between p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-5 items-center mb-2\",\n        children: [receipentUser.profilePic && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: receipentUser.profilePic,\n          alt: \"profile pic\",\n          className: \"w-10 h-10 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), !receipentUser.profilePic && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-500  rounded-full h-10 w-10 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"uppercase text-xl font-semibold text-white\",\n            children: receipentUser.name[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"uppercase\",\n          children: receipentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[55vh] overflow-y-scroll p-5\",\n      id: \"messages\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [messages.map((message, index) => {\n          const isCurrentUserIsSender = message.sender === user._id;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${isCurrentUserIsSender && \"justify-end\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col gap-1\",\n              children: [message.text && /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: `${isCurrentUserIsSender ? \"bg-primary text-white rounded-bl-none\" : \"bg-gray-300 text-primary rounded-tr-none\"} p-2 rounded-xl`,\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), message.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: message.image,\n                alt: \"message image\",\n                className: \"w-24 h-24 rounded-xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-gray-500 text-sm\",\n                children: getDateInRegualarFormat(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), isCurrentUserIsSender && message.read && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [receipentUser.profilePic && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: receipentUser.profilePic,\n                alt: \"profile pic\",\n                className: \"w-4 h-4 rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this), !receipentUser.profilePic && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-400 rounded-full h-4 w-4 flex items-center justify-center relative\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"uppercase text-sm font-semibold text-white\",\n                  children: receipentUser.name[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this);\n        }), isReceipentTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pb-10\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bg-blue-100 text-primary  p-2 rounded-xl w-max\",\n            children: \"typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-18 rounded-xl border-gray-300 shadow border flex justify-between p-2 items-center relative\",\n      children: [showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -top-96 left-0\",\n        children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          height: 350,\n          onEmojiClick: e => {\n            setNewMessage(newMessage + e.emoji);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 text-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"file\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"ri-link cursor-pointer text-xl\",\n            typeof: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            style: {\n              display: \"none\"\n            },\n            accept: \"image/gif,image/jpeg,image/jpg,image/png\",\n            onChange: onUploadImageClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"ri-emotion-line cursor-pointer text-xl\",\n          onClick: () => setShowEmojiPicker(!showEmojiPicker)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message\",\n        className: \"w-[90%] border-0 h-full rounded-xl focus:border-none\",\n        value: newMessage,\n        onChange: e => {\n          setNewMessage(e.target.value);\n          socket.emit(\"typing\", {\n            chat: selectedChat._id,\n            members: selectedChat.members.map(mem => mem._id),\n            sender: user._id\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-primary text-white py-1 px-5 rounded h-max\",\n        onClick: () => sendNewMessage(\"\"),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"ri-send-plane-2-line text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatArea, \"K4ZuF6m7Z072hpXn814g0q6vfzg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ChatArea;\nexport default ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","GetMessages","SendMessage","ClearChatMessages","HideLoader","ShowLoader","toast","moment","SetAllChats","store","EmojiPicker","ChatArea","socket","showEmojiPicker","setShowEmojiPicker","useState","isReceipentTyping","setIsReceipentTyping","dispatch","newMessage","setNewMessage","selectedChat","user","allChats","state","userReducer","messages","setMessages","receipentUser","members","find","mem","_id","sendNewMessage","image","message","chat","sender","text","emit","map","createdAt","format","read","response","success","error","console","log","getMessages","data","clearUnreadMessages","updatedChats","getDateInRegualarFormat","date","result","isSame","subtract","lastMessage","on","tempSelectedChat","getState","tempAllChats","unreadMessages","prevMessages","selctedChat","setTimeout","messagesContainer","document","getElementById","scrollTop","scrollHeight","onUploadImageClick","e","file","target","files","reader","FileReader","readAsDataURL","onloadend","profilePic","name","index","isCurrentUserIsSender","emoji","display","value"],"sources":["C:/Desktop/cur_chat_app/free-chat-app/client/src/pages/home/components/ChatArea.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GetMessages, SendMessage } from \"../../../apicalls/messages\";\r\nimport { ClearChatMessages } from \"../../../apicalls/chats\";\r\nimport { HideLoader, ShowLoader } from \"../../../redux/loaderSlice\";\r\nimport toast from \"react-hot-toast\";\r\nimport moment from \"moment\";\r\nimport { SetAllChats } from \"../../../redux/userSlice\";\r\nimport store from \"../../../redux/store\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\n\r\nfunction ChatArea({ socket }) {\r\n  const [showEmojiPicker, setShowEmojiPicker] = React.useState(false);\r\n  const [isReceipentTyping, setIsReceipentTyping] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const [newMessage, setNewMessage] = React.useState(\"\");\r\n  const { selectedChat, user, allChats } = useSelector(\r\n    (state) => state.userReducer\r\n  );\r\n  const [messages = [], setMessages] = React.useState([]);\r\n  const receipentUser = selectedChat.members.find(\r\n    (mem) => mem._id !== user._id\r\n  );\r\n\r\n  const sendNewMessage = async (image) => {\r\n    try {\r\n      const message = {\r\n        chat: selectedChat._id,\r\n        sender: user._id,\r\n        text: newMessage,\r\n        image,\r\n      };\r\n      // send message to server using socket\r\n      socket.emit(\"send-message\", {\r\n        ...message,\r\n        members: selectedChat.members.map((mem) => mem._id),\r\n        createdAt: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\r\n        read: false,\r\n      });\r\n\r\n      // send message to server to save in db\r\n      const response = await SendMessage(message);\r\n\r\n      if (response.success) {\r\n        setNewMessage(\"\");\r\n        setShowEmojiPicker(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const getMessages = async () => {\r\n    try {\r\n      dispatch(ShowLoader());\r\n      const response = await GetMessages(selectedChat._id);\r\n      dispatch(HideLoader());\r\n      if (response.success) {\r\n        setMessages(response.data);\r\n      }\r\n    } catch (error) {\r\n      dispatch(HideLoader());\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const clearUnreadMessages = async () => {\r\n    try {\r\n      socket.emit(\"clear-unread-messages\", {\r\n        chat: selectedChat._id,\r\n        members: selectedChat.members.map((mem) => mem._id),\r\n      });\r\n\r\n      const response = await ClearChatMessages(selectedChat._id);\r\n\r\n      if (response.success) {\r\n        const updatedChats = allChats.map((chat) => {\r\n          if (chat._id === selectedChat._id) {\r\n            return response.data;\r\n          }\r\n          return chat;\r\n        });\r\n        dispatch(SetAllChats(updatedChats));\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const getDateInRegualarFormat = (date) => {\r\n    let result = \"\";\r\n\r\n    // if date is today return time in hh:mm format\r\n    if (moment(date).isSame(moment(), \"day\")) {\r\n      result = moment(date).format(\"hh:mm\");\r\n    }\r\n    // if date is yesterday return yesterday and time in hh:mm format\r\n    else if (moment(date).isSame(moment().subtract(1, \"day\"), \"day\")) {\r\n      result = `Yesterday ${moment(date).format(\"hh:mm\")}`;\r\n    }\r\n    // if date is this year return date and time in MMM DD hh:mm format\r\n    else if (moment(date).isSame(moment(), \"year\")) {\r\n      result = moment(date).format(\"MMM DD hh:mm\");\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMessages();\r\n    if (selectedChat?.lastMessage?.sender !== user._id) {\r\n      clearUnreadMessages();\r\n    }\r\n\r\n    // receive message from server using socket\r\n    socket.on(\"receive-message\", (message) => {\r\n      const tempSelectedChat = store.getState().userReducer.selectedChat;\r\n      if (tempSelectedChat._id === message.chat) {\r\n        setMessages((messages) => [...messages, message]);\r\n      }\r\n\r\n      if (\r\n        tempSelectedChat._id === message.chat &&\r\n        message.sender !== user._id\r\n      ) {\r\n        clearUnreadMessages();\r\n      }\r\n    });\r\n\r\n    // clear unread messages from server using socket\r\n    socket.on(\"unread-messages-cleared\", (data) => {\r\n      const tempAllChats = store.getState().userReducer.allChats;\r\n      const tempSelectedChat = store.getState().userReducer.selectedChat;\r\n\r\n      if (data.chat === tempSelectedChat._id) {\r\n        // update unreadmessages count in selected chat\r\n        const updatedChats = tempAllChats.map((chat) => {\r\n          if (chat._id === data.chat) {\r\n            return {\r\n              ...chat,\r\n              unreadMessages: 0,\r\n            };\r\n          }\r\n          return chat;\r\n        });\r\n        dispatch(SetAllChats(updatedChats));\r\n\r\n        // set all messages as read\r\n        setMessages((prevMessages) => {\r\n          return prevMessages.map((message) => {\r\n            return {\r\n              ...message,\r\n              read: true,\r\n            };\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    // receipent typing\r\n    socket.on(\"started-typing\", (data) => {\r\n      const selctedChat = store.getState().userReducer.selectedChat;\r\n      if (data.chat === selctedChat._id && data.sender !== user._id) {\r\n        setIsReceipentTyping(true);\r\n      }\r\n      setTimeout(() => {\r\n        setIsReceipentTyping(false);\r\n      }, 1500);\r\n    });\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    // always scroll to bottom for messages id\r\n    const messagesContainer = document.getElementById(\"messages\");\r\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n  }, [messages, isReceipentTyping]);\r\n\r\n  const onUploadImageClick = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader(file);\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = async () => {\r\n      sendNewMessage(reader.result);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white h-[82vh] border rounded-2xl w-full flex flex-col justify-between p-5\">\r\n      {/* 1st part receipent user */}\r\n      <div>\r\n        <div className=\"flex gap-5 items-center mb-2\">\r\n          {receipentUser.profilePic && (\r\n            <img\r\n              src={receipentUser.profilePic}\r\n              alt=\"profile pic\"\r\n              className=\"w-10 h-10 rounded-full\"\r\n            />\r\n          )}\r\n          {!receipentUser.profilePic && (\r\n            <div className=\"bg-gray-500  rounded-full h-10 w-10 flex items-center justify-center\">\r\n              <h1 className=\"uppercase text-xl font-semibold text-white\">\r\n                {receipentUser.name[0]}\r\n              </h1>\r\n            </div>\r\n          )}\r\n          <h1 className=\"uppercase\">{receipentUser.name}</h1>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n\r\n      {/* 2nd part chat messages */}\r\n      <div className=\"h-[55vh] overflow-y-scroll p-5\" id=\"messages\">\r\n        <div className=\"flex flex-col gap-2\">\r\n          {messages.map((message, index) => {\r\n            const isCurrentUserIsSender = message.sender === user._id;\r\n            return (\r\n              <div className={`flex ${isCurrentUserIsSender && \"justify-end\"}`}>\r\n                <div className=\"flex flex-col gap-1\">\r\n                  {message.text && (\r\n                    <h1\r\n                      className={`${\r\n                        isCurrentUserIsSender\r\n                          ? \"bg-primary text-white rounded-bl-none\"\r\n                          : \"bg-gray-300 text-primary rounded-tr-none\"\r\n                      } p-2 rounded-xl`}\r\n                    >\r\n                      {message.text}\r\n                    </h1>\r\n                  )}\r\n                  {message.image && (\r\n                    <img\r\n                      src={message.image}\r\n                      alt=\"message image\"\r\n                      className=\"w-24 h-24 rounded-xl\"\r\n                    />\r\n                  )}\r\n                  <h1 className=\"text-gray-500 text-sm\">\r\n                    {getDateInRegualarFormat(message.createdAt)}\r\n                  </h1>\r\n                </div>\r\n                {isCurrentUserIsSender && message.read && (\r\n                  <div className=\"p-2\">\r\n                    {receipentUser.profilePic && (\r\n                      <img\r\n                        src={receipentUser.profilePic}\r\n                        alt=\"profile pic\"\r\n                        className=\"w-4 h-4 rounded-full\"\r\n                      />\r\n                    )}\r\n                    {!receipentUser.profilePic && (\r\n                      <div className=\"bg-gray-400 rounded-full h-4 w-4 flex items-center justify-center relative\">\r\n                        <h1 className=\"uppercase text-sm font-semibold text-white\">\r\n                          {receipentUser.name[0]}\r\n                        </h1>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n          {isReceipentTyping && (\r\n            <div className=\"pb-10\">\r\n              <h1 className=\"bg-blue-100 text-primary  p-2 rounded-xl w-max\">\r\n                typing...\r\n              </h1>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 3rd part chat input */}\r\n\r\n      <div className=\"h-18 rounded-xl border-gray-300 shadow border flex justify-between p-2 items-center relative\">\r\n        {showEmojiPicker && (\r\n          <div className=\"absolute -top-96 left-0\">\r\n            <EmojiPicker\r\n              height={350}\r\n              onEmojiClick={(e) => {\r\n                setNewMessage(newMessage + e.emoji);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex gap-2 text-xl\">\r\n          <label for=\"file\">\r\n            <i class=\"ri-link cursor-pointer text-xl\" typeof=\"file\"></i>\r\n            <input\r\n              type=\"file\"\r\n              id=\"file\"\r\n              style={{\r\n                display: \"none\",\r\n              }}\r\n              accept=\"image/gif,image/jpeg,image/jpg,image/png\"\r\n              onChange={onUploadImageClick}\r\n            />\r\n          </label>\r\n          <i\r\n            class=\"ri-emotion-line cursor-pointer text-xl\"\r\n            onClick={() => setShowEmojiPicker(!showEmojiPicker)}\r\n          ></i>\r\n        </div>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message\"\r\n          className=\"w-[90%] border-0 h-full rounded-xl focus:border-none\"\r\n          value={newMessage}\r\n          onChange={(e) => {\r\n            setNewMessage(e.target.value);\r\n            socket.emit(\"typing\", {\r\n              chat: selectedChat._id,\r\n              members: selectedChat.members.map((mem) => mem._id),\r\n              sender: user._id,\r\n            });\r\n          }}\r\n        />\r\n        <button\r\n          className=\"bg-primary text-white py-1 px-5 rounded h-max\"\r\n          onClick={() => sendNewMessage(\"\")}\r\n        >\r\n          <i className=\"ri-send-plane-2-line text-white\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatArea;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,WAAW,QAAQ,4BAA4B;AACrE,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,UAAU,EAAEC,UAAU,QAAQ,4BAA4B;AACnE,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,WAAW,QAAQ,0BAA0B;AACtD,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,WAAW,MAAM,oBAAoB;AAAC;AAE7C,SAASC,QAAQ,OAAa;EAAA;EAAA,IAAZ;IAAEC;EAAO,CAAC;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAMG,QAAQ,GAAGnB,WAAW,EAAE;EAC9B,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,KAAK,CAACkB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEM,YAAY;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGvB,WAAW,CACjDwB,KAAK,IAAKA,KAAK,CAACC,WAAW,CAC7B;EACD,MAAM,CAACC,QAAQ,GAAG,EAAE,EAAEC,WAAW,CAAC,GAAG9B,KAAK,CAACkB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAMa,aAAa,GAAGP,YAAY,CAACQ,OAAO,CAACC,IAAI,CAC5CC,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKV,IAAI,CAACU,GAAG,CAC9B;EAED,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtC,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,IAAI,EAAEf,YAAY,CAACW,GAAG;QACtBK,MAAM,EAAEf,IAAI,CAACU,GAAG;QAChBM,IAAI,EAAEnB,UAAU;QAChBe;MACF,CAAC;MACD;MACAtB,MAAM,CAAC2B,IAAI,CAAC,cAAc,EAAE;QAC1B,GAAGJ,OAAO;QACVN,OAAO,EAAER,YAAY,CAACQ,OAAO,CAACW,GAAG,CAAET,GAAG,IAAKA,GAAG,CAACC,GAAG,CAAC;QACnDS,SAAS,EAAElC,MAAM,EAAE,CAACmC,MAAM,CAAC,qBAAqB,CAAC;QACjDC,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG,MAAM1C,WAAW,CAACiC,OAAO,CAAC;MAE3C,IAAIS,QAAQ,CAACC,OAAO,EAAE;QACpBzB,aAAa,CAAC,EAAE,CAAC;QACjBN,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOgC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBxC,KAAK,CAACwC,KAAK,CAACA,KAAK,CAACX,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMc,WAAW,GAAG,YAAY;IAC9B,IAAI;MACF/B,QAAQ,CAACb,UAAU,EAAE,CAAC;MACtB,MAAMuC,QAAQ,GAAG,MAAM3C,WAAW,CAACoB,YAAY,CAACW,GAAG,CAAC;MACpDd,QAAQ,CAACd,UAAU,EAAE,CAAC;MACtB,IAAIwC,QAAQ,CAACC,OAAO,EAAE;QACpBlB,WAAW,CAACiB,QAAQ,CAACM,IAAI,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd5B,QAAQ,CAACd,UAAU,EAAE,CAAC;MACtBE,KAAK,CAACwC,KAAK,CAACA,KAAK,CAACX,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMgB,mBAAmB,GAAG,YAAY;IACtC,IAAI;MACFvC,MAAM,CAAC2B,IAAI,CAAC,uBAAuB,EAAE;QACnCH,IAAI,EAAEf,YAAY,CAACW,GAAG;QACtBH,OAAO,EAAER,YAAY,CAACQ,OAAO,CAACW,GAAG,CAAET,GAAG,IAAKA,GAAG,CAACC,GAAG;MACpD,CAAC,CAAC;MAEF,MAAMY,QAAQ,GAAG,MAAMzC,iBAAiB,CAACkB,YAAY,CAACW,GAAG,CAAC;MAE1D,IAAIY,QAAQ,CAACC,OAAO,EAAE;QACpB,MAAMO,YAAY,GAAG7B,QAAQ,CAACiB,GAAG,CAAEJ,IAAI,IAAK;UAC1C,IAAIA,IAAI,CAACJ,GAAG,KAAKX,YAAY,CAACW,GAAG,EAAE;YACjC,OAAOY,QAAQ,CAACM,IAAI;UACtB;UACA,OAAOd,IAAI;QACb,CAAC,CAAC;QACFlB,QAAQ,CAACV,WAAW,CAAC4C,YAAY,CAAC,CAAC;MACrC;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdxC,KAAK,CAACwC,KAAK,CAACA,KAAK,CAACX,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMkB,uBAAuB,GAAIC,IAAI,IAAK;IACxC,IAAIC,MAAM,GAAG,EAAE;;IAEf;IACA,IAAIhD,MAAM,CAAC+C,IAAI,CAAC,CAACE,MAAM,CAACjD,MAAM,EAAE,EAAE,KAAK,CAAC,EAAE;MACxCgD,MAAM,GAAGhD,MAAM,CAAC+C,IAAI,CAAC,CAACZ,MAAM,CAAC,OAAO,CAAC;IACvC;IACA;IAAA,KACK,IAAInC,MAAM,CAAC+C,IAAI,CAAC,CAACE,MAAM,CAACjD,MAAM,EAAE,CAACkD,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE;MAChEF,MAAM,GAAI,aAAYhD,MAAM,CAAC+C,IAAI,CAAC,CAACZ,MAAM,CAAC,OAAO,CAAE,EAAC;IACtD;IACA;IAAA,KACK,IAAInC,MAAM,CAAC+C,IAAI,CAAC,CAACE,MAAM,CAACjD,MAAM,EAAE,EAAE,MAAM,CAAC,EAAE;MAC9CgD,MAAM,GAAGhD,MAAM,CAAC+C,IAAI,CAAC,CAACZ,MAAM,CAAC,cAAc,CAAC;IAC9C;IAEA,OAAOa,MAAM;EACf,CAAC;EAEDzD,SAAS,CAAC,MAAM;IAAA;IACdmD,WAAW,EAAE;IACb,IAAI,CAAA5B,YAAY,aAAZA,YAAY,gDAAZA,YAAY,CAAEqC,WAAW,0DAAzB,sBAA2BrB,MAAM,MAAKf,IAAI,CAACU,GAAG,EAAE;MAClDmB,mBAAmB,EAAE;IACvB;;IAEA;IACAvC,MAAM,CAAC+C,EAAE,CAAC,iBAAiB,EAAGxB,OAAO,IAAK;MACxC,MAAMyB,gBAAgB,GAAGnD,KAAK,CAACoD,QAAQ,EAAE,CAACpC,WAAW,CAACJ,YAAY;MAClE,IAAIuC,gBAAgB,CAAC5B,GAAG,KAAKG,OAAO,CAACC,IAAI,EAAE;QACzCT,WAAW,CAAED,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAES,OAAO,CAAC,CAAC;MACnD;MAEA,IACEyB,gBAAgB,CAAC5B,GAAG,KAAKG,OAAO,CAACC,IAAI,IACrCD,OAAO,CAACE,MAAM,KAAKf,IAAI,CAACU,GAAG,EAC3B;QACAmB,mBAAmB,EAAE;MACvB;IACF,CAAC,CAAC;;IAEF;IACAvC,MAAM,CAAC+C,EAAE,CAAC,yBAAyB,EAAGT,IAAI,IAAK;MAC7C,MAAMY,YAAY,GAAGrD,KAAK,CAACoD,QAAQ,EAAE,CAACpC,WAAW,CAACF,QAAQ;MAC1D,MAAMqC,gBAAgB,GAAGnD,KAAK,CAACoD,QAAQ,EAAE,CAACpC,WAAW,CAACJ,YAAY;MAElE,IAAI6B,IAAI,CAACd,IAAI,KAAKwB,gBAAgB,CAAC5B,GAAG,EAAE;QACtC;QACA,MAAMoB,YAAY,GAAGU,YAAY,CAACtB,GAAG,CAAEJ,IAAI,IAAK;UAC9C,IAAIA,IAAI,CAACJ,GAAG,KAAKkB,IAAI,CAACd,IAAI,EAAE;YAC1B,OAAO;cACL,GAAGA,IAAI;cACP2B,cAAc,EAAE;YAClB,CAAC;UACH;UACA,OAAO3B,IAAI;QACb,CAAC,CAAC;QACFlB,QAAQ,CAACV,WAAW,CAAC4C,YAAY,CAAC,CAAC;;QAEnC;QACAzB,WAAW,CAAEqC,YAAY,IAAK;UAC5B,OAAOA,YAAY,CAACxB,GAAG,CAAEL,OAAO,IAAK;YACnC,OAAO;cACL,GAAGA,OAAO;cACVQ,IAAI,EAAE;YACR,CAAC;UACH,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;;IAEF;IACA/B,MAAM,CAAC+C,EAAE,CAAC,gBAAgB,EAAGT,IAAI,IAAK;MACpC,MAAMe,WAAW,GAAGxD,KAAK,CAACoD,QAAQ,EAAE,CAACpC,WAAW,CAACJ,YAAY;MAC7D,IAAI6B,IAAI,CAACd,IAAI,KAAK6B,WAAW,CAACjC,GAAG,IAAIkB,IAAI,CAACb,MAAM,KAAKf,IAAI,CAACU,GAAG,EAAE;QAC7Df,oBAAoB,CAAC,IAAI,CAAC;MAC5B;MACAiD,UAAU,CAAC,MAAM;QACfjD,oBAAoB,CAAC,KAAK,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC,EAAE,CAACI,YAAY,CAAC,CAAC;EAElBvB,SAAS,CAAC,MAAM;IACd;IACA,MAAMqE,iBAAiB,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IAC7DF,iBAAiB,CAACG,SAAS,GAAGH,iBAAiB,CAACI,YAAY;EAC9D,CAAC,EAAE,CAAC7C,QAAQ,EAAEV,iBAAiB,CAAC,CAAC;EAEjC,MAAMwD,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAACJ,IAAI,CAAC;IACnCG,MAAM,CAACE,aAAa,CAACL,IAAI,CAAC;IAC1BG,MAAM,CAACG,SAAS,GAAG,YAAY;MAC7B/C,cAAc,CAAC4C,MAAM,CAACtB,MAAM,CAAC;IAC/B,CAAC;EACH,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,+EAA+E;IAAA,wBAE5F;MAAA,wBACE;QAAK,SAAS,EAAC,8BAA8B;QAAA,WAC1C3B,aAAa,CAACqD,UAAU,iBACvB;UACE,GAAG,EAAErD,aAAa,CAACqD,UAAW;UAC9B,GAAG,EAAC,aAAa;UACjB,SAAS,EAAC;QAAwB;UAAA;UAAA;UAAA;QAAA,QAErC,EACA,CAACrD,aAAa,CAACqD,UAAU,iBACxB;UAAK,SAAS,EAAC,sEAAsE;UAAA,uBACnF;YAAI,SAAS,EAAC,4CAA4C;YAAA,UACvDrD,aAAa,CAACsD,IAAI,CAAC,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA;QACnB;UAAA;UAAA;UAAA;QAAA,QAER,eACD;UAAI,SAAS,EAAC,WAAW;UAAA,UAAEtD,aAAa,CAACsD;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,eACN;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eAGN;MAAK,SAAS,EAAC,gCAAgC;MAAC,EAAE,EAAC,UAAU;MAAA,uBAC3D;QAAK,SAAS,EAAC,qBAAqB;QAAA,WACjCxD,QAAQ,CAACc,GAAG,CAAC,CAACL,OAAO,EAAEgD,KAAK,KAAK;UAChC,MAAMC,qBAAqB,GAAGjD,OAAO,CAACE,MAAM,KAAKf,IAAI,CAACU,GAAG;UACzD,oBACE;YAAK,SAAS,EAAG,QAAOoD,qBAAqB,IAAI,aAAc,EAAE;YAAA,wBAC/D;cAAK,SAAS,EAAC,qBAAqB;cAAA,WACjCjD,OAAO,CAACG,IAAI,iBACX;gBACE,SAAS,EAAG,GACV8C,qBAAqB,GACjB,uCAAuC,GACvC,0CACL,iBAAiB;gBAAA,UAEjBjD,OAAO,CAACG;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAEhB,EACAH,OAAO,CAACD,KAAK,iBACZ;gBACE,GAAG,EAAEC,OAAO,CAACD,KAAM;gBACnB,GAAG,EAAC,eAAe;gBACnB,SAAS,EAAC;cAAsB;gBAAA;gBAAA;gBAAA;cAAA,QAEnC,eACD;gBAAI,SAAS,EAAC,uBAAuB;gBAAA,UAClCmB,uBAAuB,CAAClB,OAAO,CAACM,SAAS;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QACxC;YAAA;cAAA;cAAA;cAAA;YAAA,QACD,EACL2C,qBAAqB,IAAIjD,OAAO,CAACQ,IAAI,iBACpC;cAAK,SAAS,EAAC,KAAK;cAAA,WACjBf,aAAa,CAACqD,UAAU,iBACvB;gBACE,GAAG,EAAErD,aAAa,CAACqD,UAAW;gBAC9B,GAAG,EAAC,aAAa;gBACjB,SAAS,EAAC;cAAsB;gBAAA;gBAAA;gBAAA;cAAA,QAEnC,EACA,CAACrD,aAAa,CAACqD,UAAU,iBACxB;gBAAK,SAAS,EAAC,4EAA4E;gBAAA,uBACzF;kBAAI,SAAS,EAAC,4CAA4C;kBAAA,UACvDrD,aAAa,CAACsD,IAAI,CAAC,CAAC;gBAAC;kBAAA;kBAAA;kBAAA;gBAAA;cACnB;gBAAA;gBAAA;gBAAA;cAAA,QAER;YAAA;cAAA;cAAA;cAAA;YAAA,QAEJ;UAAA;YAAA;YAAA;YAAA;UAAA,QACG;QAEV,CAAC,CAAC,EACDlE,iBAAiB,iBAChB;UAAK,SAAS,EAAC,OAAO;UAAA,uBACpB;YAAI,SAAS,EAAC,gDAAgD;YAAA,UAAC;UAE/D;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QAER;MAAA;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACF,eAIN;MAAK,SAAS,EAAC,8FAA8F;MAAA,WAC1GH,eAAe,iBACd;QAAK,SAAS,EAAC,yBAAyB;QAAA,uBACtC,QAAC,WAAW;UACV,MAAM,EAAE,GAAI;UACZ,YAAY,EAAG4D,CAAC,IAAK;YACnBrD,aAAa,CAACD,UAAU,GAAGsD,CAAC,CAACY,KAAK,CAAC;UACrC;QAAE;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QAEL,eAED;QAAK,SAAS,EAAC,oBAAoB;QAAA,wBACjC;UAAO,GAAG,EAAC,MAAM;UAAA,wBACf;YAAG,KAAK,EAAC,gCAAgC;YAAC,MAAM,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAK,eAC5D;YACE,IAAI,EAAC,MAAM;YACX,EAAE,EAAC,MAAM;YACT,KAAK,EAAE;cACLC,OAAO,EAAE;YACX,CAAE;YACF,MAAM,EAAC,0CAA0C;YACjD,QAAQ,EAAEd;UAAmB;YAAA;YAAA;YAAA;UAAA,QAC7B;QAAA;UAAA;UAAA;UAAA;QAAA,QACI,eACR;UACE,KAAK,EAAC,wCAAwC;UAC9C,OAAO,EAAE,MAAM1D,kBAAkB,CAAC,CAACD,eAAe;QAAE;UAAA;UAAA;UAAA;QAAA,QACjD;MAAA;QAAA;QAAA;QAAA;MAAA,QACD,eAEN;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,gBAAgB;QAC5B,SAAS,EAAC,sDAAsD;QAChE,KAAK,EAAEM,UAAW;QAClB,QAAQ,EAAGsD,CAAC,IAAK;UACfrD,aAAa,CAACqD,CAAC,CAACE,MAAM,CAACY,KAAK,CAAC;UAC7B3E,MAAM,CAAC2B,IAAI,CAAC,QAAQ,EAAE;YACpBH,IAAI,EAAEf,YAAY,CAACW,GAAG;YACtBH,OAAO,EAAER,YAAY,CAACQ,OAAO,CAACW,GAAG,CAAET,GAAG,IAAKA,GAAG,CAACC,GAAG,CAAC;YACnDK,MAAM,EAAEf,IAAI,CAACU;UACf,CAAC,CAAC;QACJ;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eACF;QACE,SAAS,EAAC,+CAA+C;QACzD,OAAO,EAAE,MAAMC,cAAc,CAAC,EAAE,CAAE;QAAA,uBAElC;UAAG,SAAS,EAAC;QAAiC;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAC5C;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7TQtB,QAAQ;EAAA,QAGEZ,WAAW,EAEaC,WAAW;AAAA;AAAA,KAL7CW,QAAQ;AA+TjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}